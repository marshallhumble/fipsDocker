name: CI Build & Security Scan

on:
  pull_request:
    paths:
      - '**/Dockerfile'
      - '**.py'
      - '**/requirements.txt'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg TARGETARCH=amd64 \
            --build-arg BUILD_ARCH=linux-x86_64 \
            -t my-fips-python-app .

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          version: '0.50.0'

      - name: Generate SBOM (SPDX)
        run: |
          trivy image --format spdx-json --output sbom.spdx.json fips-python:${{ github.sha }}

      - name: Scan for CVEs
        id: scan
        run: |
          trivy image --severity CRITICAL,HIGH --exit-code 0 --format table fips-python:${{ github.sha }} > vulnscan.txt
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          head -n 20 vulnscan.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post results as PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: fips-image-security
          message: |
            ### FIPS Python Image Security Summary
            **Image Tag:** `fips-python:${{ github.sha }}`

            **Top CVEs Detected:**
            ```
            ${{ steps.scan.outputs.summary || 'No critical/high vulnerabilities found.' }}
            ```

            SBOM is attached as [sbom.spdx.json](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
